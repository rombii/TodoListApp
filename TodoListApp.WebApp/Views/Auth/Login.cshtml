@model LoginModel

@{
    ViewData["Title"] = "Login";
}


@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<style>
    .login-box {
        max-width: 320px;
        margin: 80px auto;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        background-color: #fff;
    }
    .login-box .form-group {
        margin-bottom: 16px;
    }
</style>

<div class="login-box">
    <h2>Login</h2>
    <form asp-action="Login" method="post">
        <div class="form-group">
            <label asp-for="Login" class="control-label"></label>
            <input asp-for="Login" class="form-control" style="height: 38px;" />
            <span asp-validation-for="Login" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" type="password" class="form-control" style="height: 38px;" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary w-100">Login</button>
        </div>
    </form>

    <p class="text-center mt-3">
        Don't have an account? <a asp-action="Register">Register here</a>.
    </p>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}